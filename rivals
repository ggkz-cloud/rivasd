-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Colors for the UI
local uiColors = {
    Background = Color3.fromRGB(30, 30, 30),
    Header = Color3.fromRGB(20, 20, 20),
    Button = Color3.fromRGB(50, 50, 50),
    Text = Color3.fromRGB(255, 255, 255),
    ProgressBar = Color3.fromRGB(0, 170, 255),
    ProgressBarBackground = Color3.fromRGB(50, 50, 50),
    PredefinedColors = { -- Predefined colors for the color picker
        Color3.fromRGB(255, 0, 0),   -- Red
        Color3.fromRGB(0, 255, 0),   -- Green
        Color3.fromRGB(0, 0, 255),   -- Blue
        Color3.fromRGB(255, 255, 0), -- Yellow
        Color3.fromRGB(255, 0, 255), -- Magenta
        Color3.fromRGB(0, 255, 255), -- Cyan
        Color3.fromRGB(255, 165, 0), -- Orange
        Color3.fromRGB(128, 0, 128)  -- Purple
    }
}

-- Create ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "Lozep"
gui.ResetOnSpawn = false
gui.Parent = PlayerGui

-- Loader Frame
local loaderFrame = Instance.new("Frame")
loaderFrame.Size = UDim2.new(0, 300, 0, 300)
loaderFrame.Position = UDim2.new(0.5, -150, 0.5, -150)
loaderFrame.BackgroundColor3 = uiColors.Background
loaderFrame.BorderSizePixel = 2
loaderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
loaderFrame.Parent = gui

local loaderTitle = Instance.new("TextLabel")
loaderTitle.Size = UDim2.new(1, 0, 0, 50)
loaderTitle.Position = UDim2.new(0, 0, 0, 10)
loaderTitle.BackgroundTransparency = 1
loaderTitle.Text = "Lozep"
loaderTitle.Font = Enum.Font.SourceSansBold
loaderTitle.TextSize = 24
loaderTitle.TextColor3 = uiColors.Text
loaderTitle.Parent = loaderFrame

-- Cool Loading Animation
local function playLoadingAnimation()
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, true) -- Loop back and forth
    local scaleTween = TweenService:Create(loaderFrame, tweenInfo, {Size = UDim2.new(0, 320, 0, 320)})
    scaleTween:Play()
end

playLoadingAnimation()

-- Progress Bar Background
local progressBarBackground = Instance.new("Frame")
progressBarBackground.Size = UDim2.new(0.8, 0, 0, 20)
progressBarBackground.Position = UDim2.new(0.1, 0, 0.8, 0)
progressBarBackground.BackgroundColor3 = uiColors.ProgressBarBackground
progressBarBackground.BorderSizePixel = 0
progressBarBackground.Parent = loaderFrame

-- Progress Bar
local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0, 0, 1, 0) -- Starts at 0 width
progressBar.Position = UDim2.new(0, 0, 0, 0)
progressBar.BackgroundColor3 = uiColors.ProgressBar
progressBar.BorderSizePixel = 0
progressBar.Parent = progressBarBackground

-- Animation for Progress Bar
local function animateProgressBar()
    for i = 0, 1, 0.01 do
        progressBar:TweenSize(UDim2.new(i, 0, 1, 0), "Out", "Quad", 0.05, true)
        RunService.Heartbeat:Wait() -- Simulate loading
    end
end

-- Main UI Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = uiColors.Background
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false -- Hidden until loader finishes
mainFrame.Parent = gui

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Lozep | Your Script Hub"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = uiColors.Text
titleLabel.Parent = mainFrame

-- Make the Main UI Draggable
local dragging = false
local dragInput, dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Notification System
local function createNotification(message)
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0, 200, 0, 30)
    notificationFrame.Position = UDim2.new(1, -220, 0, 20) -- Appears on the right side
    notificationFrame.BackgroundColor3 = uiColors.ProgressBar -- Initial color
    notificationFrame.BorderSizePixel = 0
    notificationFrame.Parent = gui

    local notificationLabel = Instance.new("TextLabel")
    notificationLabel.Size = UDim2.new(1, 0, 1, 0)
    notificationLabel.BackgroundTransparency = 1
    notificationLabel.Text = message
    notificationLabel.Font = Enum.Font.SourceSans
    notificationLabel.TextSize = 14
    notificationLabel.TextColor3 = uiColors.Text
    notificationLabel.Parent = notificationFrame

    -- Rainbow Effect
    local rainbowColors = {
        Color3.fromRGB(255, 0, 0),   -- Red
        Color3.fromRGB(255, 127, 0), -- Orange
        Color3.fromRGB(255, 255, 0), -- Yellow
        Color3.fromRGB(0, 255, 0),   -- Green
        Color3.fromRGB(0, 255, 255), -- Cyan
        Color3.fromRGB(0, 0, 255),   -- Blue
        Color3.fromRGB(139, 0, 255)  -- Violet
    }

    spawn(function()
        local colorIndex = 1
        while notificationFrame.Parent do
            notificationFrame.BackgroundColor3 = rainbowColors[colorIndex]
            colorIndex = (colorIndex % #rainbowColors) + 1
            wait(1) -- Change color every second
        end
    end)

    -- Tween to fade out and remove the notification
    wait(3)
    TweenService:Create(notificationFrame, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, 0, 0, 20)}):Play()
    wait(1)
    notificationFrame:Destroy()
end

-- Tabs
local tabFrame = Instance.new("Frame")
tabFrame.Size = UDim2.new(1, 0, 0, 30)
tabFrame.Position = UDim2.new(0, 0, 0, 30)
tabFrame.BackgroundColor3 = uiColors.Header
tabFrame.BorderSizePixel = 0
tabFrame.Parent = mainFrame

local function createTabButton(name, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 80, 1, 0)
    button.Position = position
    button.BackgroundColor3 = uiColors.Button
    button.Text = name
    button.Font = Enum.Font.SourceSans
    button.TextSize = 16
    button.TextColor3 = uiColors.Text
    button.BorderSizePixel = 0
    button.Parent = tabFrame
    return button
end

local mainTabButton = createTabButton("Main", UDim2.new(0, 10, 0, 0))
local settingsTabButton = createTabButton("Settings", UDim2.new(0, 100, 0, 0))

-- Tab Content Frames
local tabContents = {}

local function createTabContent()
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, 0, 1, -60)
    content.Position = UDim2.new(0, 0, 0, 60)
    content.BackgroundTransparency = 1
    content.Visible = false
    content.Parent = mainFrame
    return content
end

local mainTabContent = createTabContent()
local settingsTabContent = createTabContent()

tabContents["Main"] = mainTabContent
tabContents["Settings"] = settingsTabContent

mainTabButton.MouseButton1Click:Connect(function()
    for _, content in pairs(tabContents) do
        content.Visible = false
    end
    mainTabContent.Visible = true
end)

settingsTabButton.MouseButton1Click:Connect(function()
    for _, content in pairs(tabContents) do
        content.Visible = false
    end
    settingsTabContent.Visible = true
end)

mainTabContent.Visible = true -- Set default tab

-- Keybind to Toggle GUI
local toggleKey = Enum.KeyCode.F -- Default toggle key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == toggleKey then
        mainFrame.Visible = not mainFrame.Visible
        if mainFrame.Visible then
            createNotification("GUI Opened")
        else
            createNotification("GUI Closed")
        end
    end
end)

-- Settings Tab: Change Keybind
local keybindButton = Instance.new("TextButton")
keybindButton.Size = UDim2.new(0.9, 0, 0, 30)
keybindButton.Position = UDim2.new(0.05, 0, 0.1, 0)
keybindButton.BackgroundColor3 = uiColors.Button
keybindButton.Text = "Change Toggle Keybind (Current: F)"
keybindButton.Font = Enum.Font.SourceSans
keybindButton.TextSize = 16
keybindButton.TextColor3 = uiColors.Text
keybindButton.Parent = settingsTabContent

keybindButton.MouseButton1Click:Connect(function()
    keybindButton.Text = "Press a Key..."
    local connection
    connection = UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            toggleKey = input.KeyCode
            keybindButton.Text = "Change Toggle Keybind (Current: " .. input.KeyCode.Name .. ")"
            connection:Disconnect()
        end
    end)
end)

-- Settings Tab: Unload Button
local unloadButton = Instance.new("TextButton")
unloadButton.Size = UDim2.new(0.9, 0, 0, 30)
unloadButton.Position = UDim2.new(0.05, 0, 0.2, 0)
unloadButton.BackgroundColor3 = uiColors.Button
unloadButton.Text = "Unload UI"
unloadButton.Font = Enum.Font.SourceSans
unloadButton.TextSize = 16
unloadButton.TextColor3 = uiColors.Text
unloadButton.Parent = settingsTabContent

unloadButton.MouseButton1Click:Connect(function()
    gui:Destroy()
    print("Lozep Unloaded")
end)

-- Settings Tab: Predefined Color Picker
local function createColorPicker(title, parent, callback)
    local pickerFrame = Instance.new("Frame")
    pickerFrame.Size = UDim2.new(1, 0, 0, 90)
    pickerFrame.Position = UDim2.new(0, 0, 0.3, 0)
    pickerFrame.BackgroundTransparency = 1
    pickerFrame.Parent = parent

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 20)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 16
    titleLabel.TextColor3 = uiColors.Text
    titleLabel.Parent = pickerFrame

    local buttonContainer = Instance.new("Frame")
    buttonContainer.Size = UDim2.new(1, 0, 0, 40)
    buttonContainer.Position = UDim2.new(0, 0, 0.5, 0)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Parent = pickerFrame

    local layout = Instance.new("UIGridLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.CellSize = UDim2.new(0, 40, 0, 40)
    layout.CellPadding = UDim2.new(0, 5, 0, 5)
    layout.Parent = buttonContainer

    for _, color in pairs(uiColors.PredefinedColors) do
        local colorButton = Instance.new("TextButton")
        colorButton.Size = UDim2.new(0, 40, 0, 40)
        colorButton.BackgroundColor3 = color
        colorButton.Text = ""
        colorButton.Parent = buttonContainer

        colorButton.MouseButton1Click:Connect(function()
            callback(color)
        end)
    end
end

createColorPicker("Choose GUI Color", settingsTabContent, function(newColor)
    mainFrame.BackgroundColor3 = newColor
end)

-- Start Progress Animation
animateProgressBar()

-- Simulate Loader Completion
wait(2) -- Simulated loading time
loaderFrame:Destroy()
mainFrame.Visible = true
createNotification("GUI Opened")

